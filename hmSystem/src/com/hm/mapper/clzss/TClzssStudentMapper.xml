<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.hm.mapper.clzss.TClzssStudentMapper" >
  <resultMap id="BaseResultMap" type="com.hm.entity.TClzssStudent" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="STU_ID" property="stuId" jdbcType="VARCHAR" />
    <result column="CLZ_ID" property="clzId" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="DATE" />
    <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="DATE" />
    <result column="UPDATE_USER" property="updateUser" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, STU_ID, CLZ_ID, "STATE", CREATE_TIME, CREATE_USER, UPDATE_TIME, UPDATE_USER
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from HMDN.T_CLZSS_STUDENT
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from HMDN.T_CLZSS_STUDENT
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hm.entity.TClzssStudent" >
    insert into HMDN.T_CLZSS_STUDENT (ID, STU_ID, CLZ_ID, 
      "STATE", CREATE_TIME, CREATE_USER, 
      UPDATE_TIME, UPDATE_USER)
    values (#{id,jdbcType=VARCHAR}, #{stuId,jdbcType=VARCHAR}, #{clzId,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=DATE}, #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hm.entity.TClzssStudent" >
    insert into HMDN.T_CLZSS_STUDENT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      STU_ID,
      CLZ_ID,
      "STATE",
      CREATE_TIME,
      CREATE_USER,
      UPDATE_TIME,
      UPDATE_USER,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=VARCHAR},
      #{stuId,jdbcType=VARCHAR},
      #{clzId,jdbcType=VARCHAR},
      #{state,jdbcType=VARCHAR},
      #{createTime,jdbcType=DATE},
      #{createUser,jdbcType=VARCHAR},
      #{updateTime,jdbcType=DATE},
      #{updateUser,jdbcType=VARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hm.entity.TClzssStudent" >
    update HMDN.T_CLZSS_STUDENT
    <set >
      <if test="stuId != null" >
        STU_ID = #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="clzId != null" >
        CLZ_ID = #{clzId,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        "STATE" = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=DATE},
      </if>
      <if test="createUser != null" >
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=DATE},
      </if>
      <if test="updateUser != null" >
        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hm.entity.TClzssStudent" >
    update HMDN.T_CLZSS_STUDENT
    set STU_ID = #{stuId,jdbcType=VARCHAR},
      CLZ_ID = #{clzId,jdbcType=VARCHAR},
      "STATE" = #{state,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=DATE},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
	 <!-- 根据项目组id查询学员 -->
  <select id="selecStutList" resultType="java.util.Map">
  	select 
  	     c.id cid,
  	     s.id id,
  	 	s.name name,
	       s.phone phone,
	       s.EDU EDU,
	        s.SEX SEX,
	          s.QQ QQ,
	       s.END_STATE ENDSTATE,
	       bc.name clzssName
	  from t_clzss_student c 
	  left join t_end_student s on c.stu_id = s.id 
	  left join t_basi_clzss bc on bc.id = c.clz_id 
    where  c.state = '1' and  c.clz_id=#{id}
    ORDER BY c.ID
  </select> 
  <!-- 修改班级表转班 -->
  <update id="updateIdSTATE" parameterType="com.hm.entity.TClzssStudent" >
    update T_CLZSS_STUDENT
    set 
      "STATE" = '0'
         where ID = #{id}
  </update>
  <insert id="insertStudent" parameterType="com.hm.entity.TClzssStudent" >
    insert into T_CLZSS_STUDENT (ID, STU_ID, CLZ_ID, 
      "STATE", CREATE_TIME, CREATE_USER 
      )
    values (sys_guid(), #{stuId}, #{clzId}, 
      #{state},sysdate, #{createUser})
  </insert>
</mapper>